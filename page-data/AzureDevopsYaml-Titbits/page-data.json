{"componentChunkName":"component---src-templates-blog-post-js","path":"/AzureDevopsYaml-Titbits/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"d30cfa9f-f279-58ef-a3b9-a7f14320d052","excerpt":"When working with YAML pipeline, there are many patterns that are reused across the projects. Here are a few references  Scenario: Trigger Release or Test (load…","html":"<!-- Post Content -->\n<p>When working with YAML pipeline, there are many patterns that are reused across the projects.</p>\n<p>Here are a few references </p>\n<p><strong>Scenario:</strong></p>\n<ul>\n<li><em>Trigger Release or Test (load/performance/regression) pipelines after successful build</em></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># azure-pipelines-primary.yaml\ntrigger: none\nsteps:\n  - powershell: Write-Host \"Triggering pipeline invoked\"\n  - task: PublishBuildArtifacts@1\n    displayName: 'Drop sample file'\n    inputs:\n      pathToPublish: $(System.DefaultWorkingDirectory)/Get-ResourceGroupTags.ps1\n      artifactName: drop</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># azure-pipelines-secondary.yaml\ntrigger: none\nresources:\n  pipelines:\n  - pipeline: randomname\n    source: primary\n    trigger: \n      branches:\n      - master\n      - Koushik/*\nsteps:\n  - powershell: Write-Host \"Triggered secondary pipeline\"\n  # - task: DownloadPipelineArtifact@2\n  #   displayName: 'artifact: Download artifacts'\n  #   name: download_artifacts\n  #   enabled: true\n  #   inputs:\n  #     source: 'specific'\n  #     project: development\n  #     pipeline: randomname\n  #     preferTriggerPipeline: true\n  #     runVersion: latest</code></pre></div>\n<p><strong>Scenario:</strong></p>\n<ul>\n<li><em>Reuse variables across jobs within a pipeline</em></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># azure-pipelines-test-variable-crossjobs.yaml\ntrigger: none\njobs:\n  - job: set_variable\n    displayName: Set Variable\n    steps:\n      - task: PowerShell@2\n        displayName: 'ps: Set OBJ'\n        name: set_obj\n        enabled: true\n        inputs: \n          targetType: 'inline'\n          script: | \n            $objInfo = @{\n                \"Name\" = \"var-set-in-set_variable-job\";\n              } | ConvertTo-Json -Compress\n              Write-Host \"##vso[task.setvariable variable=objInfo;isOutput=true]$($objInfo)\"          \n  - job: get_variable\n    displayName: Get Variable\n    dependsOn: \n      - set_variable\n    variables:\n      objInfo: $[ dependencies.set_variable.outputs['set_obj.objInfo'] ]\n    steps:\n      - powershell: |\n          $objInfoDtl = '$(objInfo)' | ConvertFrom-Json\n          Write-Host $objInfoDtl.Name</code></pre></div>\n<p><strong>Scenario:</strong></p>\n<ul>\n<li><em>Dynamically change the buildname of executing pipeline</em>\n<strong>*Note: Default name of the pipeline will start as date when ‘name’ is not provided *</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  # azure-pipelines-updaterunningbuildname.yaml\n  name: $(BuildId)_$(SourceBranch)_$(Date:yyyyMMdd)$(Rev:.r)\n  trigger: none\n  jobs:\n    - job: set_variable\n      displayName: Set Variable\n      steps:\n        - task: PowerShell@2\n          displayName: 'ps: Set BuildId'\n          name: set_buildId\n          enabled: true\n          inputs: \n            targetType: 'inline'\n            script: | \n              $buildId_name = \"your-awesome-name with somespace and number 100\"\n              Write-Host \"##vso[task.setvariable variable=newId;isOutput=true]$buildId_name\"\n    - job: update_buildName\n      displayName: Set BuildId\n      dependsOn: \n        - set_variable\n      variables:\n        newBuildId: $[ dependencies.set_variable.outputs['set_buildId.newId'] ]\n      steps:\n        - powershell: |\n            Write-Host \"##vso[build.updatebuildnumber]$(newBuildId)\"</code></pre></div>\n<p><strong>Scenario:</strong></p>\n<ul>\n<li><em>Upload files during build process as artifact</em></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  # azure-pipelines-uploadfile-as-buildartifact.yaml\n  steps:\n    - task: PowerShell@2\n      displayName: 'ps: Create file'\n      name: create_file\n      enabled: true\n      inputs: \n        targetType: 'inline'\n        script: | \n          New-Item $(System.DefaultWorkingDirectory)\\test.txt\n          Set-Content $(System.DefaultWorkingDirectory)\\test.txt 'We are going to upload this file as an artifact'\n          Write-Host \"##vso[artifact.upload containerfolder=customupload;artifactname=samplefile]$(System.DefaultWorkingDirectory)\\test.txt\"</code></pre></div>","frontmatter":{"title":"Azure Devops YAML titbits","date":"August 19, 2020","description":"","tags":["azure-devops","yaml"]}}},"pageContext":{"slug":"/AzureDevopsYaml-Titbits/","previous":{"fields":{"slug":"/GitGraph/"},"frontmatter":{"title":"Generate git graph locally without GIT!!!"}},"next":{"fields":{"slug":"/AzureAppService-VNET-Integration-Failure/"},"frontmatter":{"title":"Azure App Service - VNET integration - Locks Subnet"}}}},"staticQueryHashes":["2841359383"]}