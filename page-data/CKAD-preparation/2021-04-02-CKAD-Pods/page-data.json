{"componentChunkName":"component---src-templates-blog-post-js","path":"/CKAD-preparation/2021-04-02-CKAD-Pods/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"4912214e-019f-50ce-bf29-6c943f1082ec","excerpt":"PODS Pod is a smallest component in the K8S architecture. A container typically has one-one relation with a Pod. For scenarios where application needs pattern…","html":"<!-- Post Content -->\n<h3>PODS</h3>\n<p>Pod is a smallest component in the K8S architecture. A container typically has one-one relation with a Pod. For scenarios where application needs pattern implementation like sidecar or adaptor or even ambassador. </p>\n<h4>YAML for PODS</h4>\n<p>K8S YAML has 4 root levels required fields: <code class=\"language-text\">apiVersion</code>, <code class=\"language-text\">kind</code>, <code class=\"language-text\">metadata</code>, <code class=\"language-text\">spec</code></p>\n<p><code class=\"language-text\">apiVersion</code> : ApiVersion of K8S (v1 → all <code class=\"language-text\">1.xx</code> versions, including alpha and beta)</p>\n<p><code class=\"language-text\">kind</code> : Type of object (Pods, Service, ReplicaSet, Deployment)</p>\n<p><code class=\"language-text\">metadata</code> : A Dictionary of the object like <code class=\"language-text\">name</code> (string value), <code class=\"language-text\">labels</code> (Dictionary value, any non k8s specific unlike the root level metadata)</p>\n<p><code class=\"language-text\">spec</code>: Depending on type of object, the information changes. This is also a dictionary.</p>\n<h5>POD definition - vanilla flavour</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># nginx-pod-definition.yaml\n\napiVersion: v1\n\nkind: Pod\n\nmetadata:\n    name: sample-app\n    labels:\n        app: api\n        type: frontend\n\nspec:\n    containers:\n        - name: nginx-container\n          image: nginx</code></pre></div>\n<h5>POD definition file with Arguments</h5>\n<p>Most of the container images built have docker file with <code class=\"language-text\">ENTRYPOINT</code> (which command to execute on startup of the container) and <code class=\"language-text\">CMD</code> (what are the input arguments to be passed). When creating a POD definition to deploy such a container and overwrite the default values defined in the <code class=\"language-text\">dockerfile</code>, include under the containers section <code class=\"language-text\">command</code> and <code class=\"language-text\">args</code>. <strong><em>Note that <code class=\"language-text\">args</code> accepts array of values.</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># tomcat-pod-definition.yaml\n\napiVersion: v1\n\nkind: Pod\n\nmetadata:\n    name: sample-app-2\n    labels:\n        app: api-2\n        type: frontend\n\nspec:\n    containers:\n        - name: tomcat-container\n          image: tomcat\n          command: '/usr/local/tomcat/entrypoint.sh'\n          args: [\"8080\"]</code></pre></div>\n<h5>Create POD in K8S</h5>\n<p>To create the container with the above file use:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl create -f ./nginx-pod-definition.yaml</code></pre></div>\n<h5>Security on POD</h5>\n<p>K8S provides capabilities to add security at either POD level or at the container level. By adding SecurityContext Object with runAsUser along with required capabilities is a way forward to provide fine grained access to the users. Following is a sample POD definition:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># nginx-pod-definition.yaml\n\napiVersion: v1\n\nkind: Pod\n\nmetadata:\n    name: sample-app\n    labels:\n        app: api\n        type: frontend\n\nspec:\n    # POD level security\n    # Add user who has ID 1000\n    securityContext:\n        runAsUser: 2000\n\n    containers:\n        - name: nginx-container\n          image: nginx\n          # Container level security\n          # Add user who has ID 2000, and restricted capabilties to only manage system date\n          securityContext:\n            runAsUser: 2000\n            capablities:\n                add: [\"SYS_DATE\"]</code></pre></div>\n<h4>Debugging</h4>\n<ul>\n<li>If the YAML is malformed, kubectl errors outs during execution. </li>\n<li>If the <code class=\"language-text\">image</code> provided in the definition <code class=\"language-text\">spec</code> is not found, <code class=\"language-text\">kubectl get pods</code> still returns the described pod but with state <code class=\"language-text\">Imagepullbackoff</code>. </li>\n<li>\n<p>To see the details of a pod use the following</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># get all details\nkubectl describe pod &lt;podname> | grep\n\n# get information without full details\nkubectl get pods &lt;podname> -o wide</code></pre></div>\n<ul>\n<li>Events: list of actions performed in sequence</li>\n<li>Node</li>\n</ul>\n</li>\n<li>\n<p>To extract pod definition yaml for an existing pod:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get pod &lt;pod-name> -o yaml > &lt;pod-definition-file-name.yaml>\n\nkubectl get pod &lt;pod-name> -o wide # all details of pod</code></pre></div>\n</li>\n<li>\n<p>To apply changes to a running pod, </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># get current running config and once updated and save it is directly applied\n\nkubectl edit pod &lt;pod-name></code></pre></div>\n</li>\n<li>\n<p>To search for the PODs based on their labels:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get pod -l &lt;name-of-lable>=&lt;value-of-label></code></pre></div>\n</li>\n<li>\n<p>To dive into the running pod, similar to Docker</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl exec -it &lt;name-of-pod> -- &lt;command>\nkubectl exec -it ubuntu-sleeper -- date -s 'Apr 27 2021, 07:00:00'</code></pre></div>\n</li>\n</ul>\n<h4>Gottcha</h4>\n<ul>\n<li>Want to overwrite the container <code class=\"language-text\">entrypoint</code> on running container in the POD, no cannot. To do so, delete the POD and recreate it. <strong>Use the deployment YAML which automatically takes care if it</strong></li>\n</ul>","frontmatter":{"title":"CKAD Preparation - Pods","date":"April 02, 2021","description":"","tags":["kubernetes","ckad"]}}},"pageContext":{"slug":"/CKAD-preparation/2021-04-02-CKAD-Pods/","previous":{"fields":{"slug":"/CKAD-preparation/"},"frontmatter":{"title":"CKAD Preparation - Development Environment"}},"next":{"fields":{"slug":"/CKAD-preparation/2021-04-07-CKAD-Replicationsets/"},"frontmatter":{"title":"CKAD Preparation - ReplicationSets"}}}},"staticQueryHashes":["2841359383"]}