{"componentChunkName":"component---src-templates-blog-post-js","path":"/CKAD-preparation/2021-04-07-CKAD-Replicationsets/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"6fbb39c3-56b2-5f05-a4dc-d499b468a870","excerpt":"Controllers (yes multiple) keep track of all the activities and monitors each of them to respond accordingly in case of change of behavior. All the controllers…","html":"<!-- Post Content -->\n<p>Controllers (yes multiple) keep track of all the activities and monitors each of them to respond accordingly in case of change of behavior. All the controllers run inside <code class=\"language-text\">kube-control-manager</code> which act as reflexes in the cluster. </p>\n<h3>Replication Controller</h3>\n<p>To prevent users from loosing connection to a running pod that crashes. So either by creating a replicate of existing POD or by redeploying the crashed POD. This nature therefore helps in addressing High Availability, Load Balancing and Scaling.</p>\n<p>Replication Controller is one of the Master node components that spans across all nodes in the cluster.</p>\n<h3>Definition file</h3>\n<p>Start with the base definition keywords: </p>\n<table>\n<thead>\n<tr>\n<th><code class=\"language-text\">apiVersion</code></th>\n<th><code class=\"language-text\">kind</code></th>\n<th><code class=\"language-text\">metadata</code></th>\n<th><code class=\"language-text\">spec</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v1</td>\n<td><strong>ReplicationController</strong></td>\n<td><code class=\"language-text\">name</code><br/><code class=\"language-text\">labels</code></td>\n<td><code class=\"language-text\">template</code> → pod-definition <br/> <code class=\"language-text\">replicas</code> → integer</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong> The pods created using ReplicationController definition is from its name <strong><em>not from</em></strong> the metadata under spec → template → metadata</p>\n<h3>Replica Set</h3>\n<p>Replica Set is a new recommended way of working as it originates from Replication Controller. </p>\n<p>Additional feature of a ReplicaSet is managing Pods those are not part the current replica set. Use the <code class=\"language-text\">selector</code> tag in the definition file under <code class=\"language-text\">spec</code> section to add other pods. </p>\n<table>\n<thead>\n<tr>\n<th><code class=\"language-text\">apiVersion</code></th>\n<th><code class=\"language-text\">kind</code></th>\n<th><code class=\"language-text\">metadata</code></th>\n<th><code class=\"language-text\">spec</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>apps/v1</td>\n<td><strong>ReplicaSet</strong></td>\n<td><code class=\"language-text\">name</code><br/><code class=\"language-text\">labels</code></td>\n<td><code class=\"language-text\">template</code> → pod-definition <br/> <code class=\"language-text\">replicas</code> → integer <br/> <code class=\"language-text\">selector</code></td>\n</tr>\n</tbody>\n</table>\n<h2>Learning with example</h2>\n<p>Consider, within a K8S cluster there are already PODs, labeled <code class=\"language-text\">login-api</code>, running even before there exists a ReplicaSet. Now when a replicaSet, named <code class=\"language-text\">authentication-rs</code>, is created with template corresponding to same container image, as the running POD but labeled <code class=\"language-text\">authentication-api</code> on the selector.</p>\n<h3>POD from ReplicaSet Perspective</h3>\n<p>The definition file for the ReplicaSet contains template of POD and selector fields. Based on this information, a replicaSet instance keep track of pods. In above scenario by default, the <code class=\"language-text\">authentication-rs</code> keeps track of <em>only</em> the PODs labeled  <code class=\"language-text\">authentication-api</code> to make sure desired number of these PODs are running but not the PODs labeled <code class=\"language-text\">login-api</code>. By using the command <code class=\"language-text\">kubectl describe replicaset authentication-rs</code>, the Events sections will list all the PODs which are being tracked by the replicaSet. All the pods created by the replicaSet adds a metadata label <code class=\"language-text\">ownerreferences</code>.</p>\n<h3>ReplicaSet from POD perspective</h3>\n<p>The pods deployed from the replicaSet can be identified by the names, as the start with the replicaSet name. In the above scenario, the pods names turnup something similar to <code class=\"language-text\">authentication-rs-ab1c2d</code>. Another option to find the details are by using the command <code class=\"language-text\">kubectl describe pod authentication-rs-ab1c2d</code>. The Events sections will list all the POD details, one of which will be <code class=\"language-text\">Controlled By:  ReplicaSet/authentication-rs</code>. Also notice that the metadata section of the POD contains <code class=\"language-text\">ownerReferences</code> with the replicaSet name <code class=\"language-text\">authentication-rs</code>. </p>\n<h3>Definition Files</h3>\n<p>Following below are sample Definition files to create a ReplicationController and a ReplicaSet</p>\n<h4>ReplicationController Definition File</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># replicationController-definition.yaml \n\napiVersion: v1\nkind: ReplicationController\nmetadata:\n    name: myapp-rc\n    labels:\n        app: myapp\n        type: frontend\nspec:\n    template:\n        # Pod definition\n        metadata:\n            name: sample-app\n            labels:\n                app: api\n                type: frontend\n        spec:\n            containers:\n                - name: nginx-container\n                  image: nginx\n\n    replicas: 5</code></pre></div>\n<h4>ReplicaSet Definition File</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># replicaSet-definition.yaml \n\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n    name: myapp-rc\n    labels:\n        app: myapp\n        type: frontend\nspec:\n    template:\n        # Pod definition\n        metadata:\n            name: sample-app\n            labels:\n                app: api\n                type: frontend\n        spec:\n            containers:\n                - name: nginx-container\n                  image: nginx\n\n    replicas: 5\n    selector: \n        matchLabels:\n            type: frontend</code></pre></div>\n<h3>Commands</h3>\n<ul>\n<li>Create without yaml</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl create replicaSet authentication-rs --image nginx --replicas=3</code></pre></div>\n<ul>\n<li>Get details of ReplicaSet</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl describe replicaSet authentication-rs</code></pre></div>\n<ul>\n<li>To fix existing erroneous ReplicaSet</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl edit replicaset &lt;name-of-replicaset></code></pre></div>\n<ul>\n<li>Scale up or down pods in the replica sets:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## Option 1\nkubectl scale --replicas &lt;number> rs/&lt;name-of-replicaset>\n\n## Option 2\nkubectl scale replicaset --replicas=&lt;number> &lt;name-of-replicaset></code></pre></div>\n<h3>Debugging issue</h3>\n<ul>\n<li>A erroneous ReplicaSet can still create PODs but in error state.\nTo fix the issue there are two options:</li>\n<li><em>Option 1</em>: Delete the ReplicaSet → Fix the YAML → Apply updated file to create new ReplicaSet</li>\n<li><em>Option 2</em>: Using <code class=\"language-text\">kubectl edit</code> fix the YAML → Delete all the PODs which were created erroneously </li>\n</ul>","frontmatter":{"title":"CKAD Preparation - ReplicationSets","date":"April 07, 2021","description":"","tags":["kubernetes","ckad"]}}},"pageContext":{"slug":"/CKAD-preparation/2021-04-07-CKAD-Replicationsets/","previous":{"fields":{"slug":"/CKAD-preparation/2021-04-02-CKAD-Pods/"},"frontmatter":{"title":"CKAD Preparation - Pods"}},"next":{"fields":{"slug":"/CKAD-preparation/2021-04-09-CKAD-Deployments/"},"frontmatter":{"title":"CKAD Preparation - Deployment"}}}},"staticQueryHashes":["2841359383"]}