{"componentChunkName":"component---src-templates-blog-post-js","path":"/CKAD-preparation/2021-04-20-CKAD-Variables/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"0b99bba5-17d6-5c48-a2b5-733e297be114","excerpt":"Injecting Data into a Container is a frequent requirement. That is apps running as a container may need settings for connecting to databases, endpoints of otherâ€¦","html":"<!-- Post Content -->\n<p>Injecting Data into a Container is a frequent requirement. That is apps running as a container may need settings for connecting to databases, endpoints of other external apps, passwords or certificates to manage sensitive data and many more. To handle this K8S provides 3 ways to manage these variables. </p>\n<ul>\n<li><a href=\"/Environment\">Environment</a></li>\n<li><a href=\"/ConfigMaps\">ConfigMaps</a></li>\n<li><a href=\"/Secrets\">Secret</a></li>\n</ul>\n<h4>Environment</h4>\n<p>Variables declared in the POD definition file are saved in keyvalue pair.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## POD definition file with Environment variables\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        env:\n        - name: DATABASE_NAME\n          value: Company_Project_mysqldb\n        - name: DATABASE_ADMIN\n          value: mysqlAdmin</code></pre></div>\n<h4>ConfigMaps</h4>\n<p>For an applications that require multiple pod definition files, managing Environment Variables in each files becomes difficult to manage. Therefore, with a config file the environment variables are all managed at single location and it can be referenced across multiple definition files.</p>\n<p>ConfigMaps can be injected into a POD definition file either as <strong><em>Environment Variable</em></strong> or <strong><em>Single Environment Variable</em></strong> or <strong><em>Volume</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## filename: web-configmap.yaml\n## define configmap: web-config\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n    name: web-config\n    lables:\n        key1: value1\n        key2: value2\ndata:\n    DATABASE_NAME: Company_Project_mysqldb\n    DATABASE_ADMIN: mysqlAdmin</code></pre></div>\n<p>Using the command <code class=\"language-text\">kubectl create -f web-configmap.yaml</code></p>\n<p><strong><em>Environment Variable</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## reference configmap in defintion\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        envFrom:\n        - configMapRef: \n              name: web-config</code></pre></div>\n<p><strong><em>Single Environment Variable</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## reference configmap in defintion\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        env:\n        - name: db_name # variable used within the pod\n          valueFrom:\n            configMapRef:\n              name: web-config\n              key: DATABASE_NAME # data key defined within configmap</code></pre></div>\n<p><strong><em>Volume Variable</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## reference configmap in defintion\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        volume:\n        - name: web-config-volume\n          configMap:\n              name: web-config</code></pre></div>\n<h4>Secrets</h4>\n<p>Similar to a ConfigMap, Secrets are also defined as key-value pairs. The distinction remains at the value that is put in. The value is a base64 encoded string. Although it is not really safe to save as base64 encoded, atleast this minimizes the risk of accidental display of actual values. </p>\n<p>Secrets are saved in etcd at the master node and are propagated to the nodes only when the pod needs it. kubelet on the node is responsible for the lifecycle management of the local copy of secrets within the node.</p>\n<p>Again 3 ways to refer secrets in POD definition file after being created. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># secrets file definition: webapp-secret.yaml\n\napiVersion: v1\nkind: Secret\nmetadata:\n  name: webapp-secret\ndata:\n  DB_HOST: Q29tcGFueV9Qcm9qZWN0X215c3FsZGI= ## base64 encoded Company_Project_mysqldb\n  DB_ADMIN: cm9vdA== ## base64 encoded root\n  DB_PASSWORD: UEAkJHcwcmQ= ## base64 encoded P@$$w0rd</code></pre></div>\n<p>Inject into a POD as <strong><em>Environment Variable</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## reference secret as environment variable in definition\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        envFrom:\n        - secretRef: \n              name: webapp-secret</code></pre></div>\n<p>Inject into a POD as <strong><em>Volume Variable</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## reference secret as volume in POD definition\n\napiVersion: v1\nkind: Pod\nmetadata:\n    name: web\n    lables:\n        key1: value1\nspecs:\n    containers:\n      - name: nginx-webapp\n        image: nginx\n        ports:\n          - containerPort: 8080\n        volume:\n        - name: webapp-secret-volume\n          secret:\n              name: webapp-secret</code></pre></div>","frontmatter":{"title":"CKAD Preparation - Variables","date":"April 20, 2021","description":"","tags":["kubernetes","ckad"]}}},"pageContext":{"slug":"/CKAD-preparation/2021-04-20-CKAD-Variables/","previous":{"fields":{"slug":"/CKAD-preparation/2021-04-09-CKAD-Deployments/"},"frontmatter":{"title":"CKAD Preparation - Deployment"}},"next":{"fields":{"slug":"/CKAD-preparation/2021-04-28-CKAD-ServiceAccount/"},"frontmatter":{"title":"CKAD Preparation - ServiceAccount"}}}},"staticQueryHashes":["2841359383"]}