{"componentChunkName":"component---src-templates-blog-post-js","path":"/CKAD-preparation/2021-04-28-CKAD-ServiceAccount/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"22602025-b19c-5f65-8ef2-f6e6781bd962","excerpt":"ServiceAccount are non personal (user) accounts which are/can be used by third party applications to authorize against the applications hosted within K8S. Forâ€¦","html":"<!-- Post Content -->\n<p>ServiceAccount are non personal (user) accounts which are/can be used by third party applications to authorize against the applications hosted within K8S. For example, consider the image required to create a container in the POD is from a private registry. In this case, start by creating a secret with registry credentials, create a ServiceAccount by including the <code class=\"language-text\">imagePullSecrets</code> with the created secret. Now, in the POD definition include ServiceAccount as mounted volume. </p>\n<p>Each ServiceAccount when created contains 3 keyvalue pairs: <code class=\"language-text\">token</code>, <code class=\"language-text\">ca.cert</code>, <code class=\"language-text\">namespace</code>. Out of which token is a secret that is mounted.</p>\n<p>To create Service Account:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># serviceaccount definition\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus-npa\nsecrets:\n  - name: &lt;name-of-secret>\nimagePullSecrets:\n  - name: &lt;name-of-registry-secret></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl create serviceaccount &lt;name-of-service-account></code></pre></div>\n<p>Within K8S <code class=\"language-text\">default</code> ServiceAccount is provide which is added to each deployed POD. To list the ServiceAccount mounted within a running POD, login into the POD using <code class=\"language-text\">exec</code> command and browse to <code class=\"language-text\">/var/run/secrets/kubernetes.io/serviceaccount</code>.</p>\n<p>On the master node, the <code class=\"language-text\">Token Controller</code> maintains the lifecycle of the tokens within the ServiceAccounts. It checks and invalidates the token if either POD or ServiceAccount are deleted from K8S. On the worker node, the Kubelet is responsible for refreshing the token. The application within the POD is responsible for pulling the latest token.</p>\n<p>Secret can be attached to an existing ServiceAccount from the Secret definition file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nkind: Secret\nmetadata:\n  name: new-registry-secret\n  annotations:\n    kubernetes.io/service-account.name: thridparty-app-npa\ntype: kubernetes.io/service-account-token</code></pre></div>\n<p>To add a ServiceAccount on a POD definition file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># nginx-pod-definition.yaml\n\napiVersion: v1\n\nkind: Pod\n\nmetadata:\n    name: sample-app\n    labels:\n        app: api\n        type: frontend\n\nspec:\n    serviceAccountName: &lt;name-of-new-serviceaccount>\n    containers:\n        - name: nginx-container\n          image: nginx</code></pre></div>","frontmatter":{"title":"CKAD Preparation - ServiceAccount","date":"April 28, 2021","description":"","tags":["kubernetes","ckad"]}}},"pageContext":{"slug":"/CKAD-preparation/2021-04-28-CKAD-ServiceAccount/","previous":{"fields":{"slug":"/CKAD-preparation/2021-04-20-CKAD-Variables/"},"frontmatter":{"title":"CKAD Preparation - Variables"}},"next":{"fields":{"slug":"/CKAD-preparation/2021-05-08-CKAD-PodLifecycle/"},"frontmatter":{"title":"CKAD Preparation - Pod Life cycle"}}}},"staticQueryHashes":["2841359383"]}