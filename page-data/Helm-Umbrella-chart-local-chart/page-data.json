{"componentChunkName":"component---src-templates-blog-post-js","path":"/Helm-Umbrella-chart-local-chart/","result":{"data":{"site":{"siteMetadata":{"title":"Koushik's scribble"}},"markdownRemark":{"id":"394e52db-4961-5e24-9884-6a6a7b593f52","excerpt":"Overview In many situations it is not always that the Helm chart that is created is built on public or shared packages. Especially, in local developments…","html":"<!-- Post Content -->\n<h2>Overview</h2>\n<p>In many situations it is not always that the Helm chart that is created is built on public or shared packages. Especially, in local developments, consider an API that is built on other building blocks. Building such complex charts which are interdependent are referred as <strong><a href=\"https://helm.sh/docs/howto/charts_tips_and_tricks/#complex-charts-with-many-dependencies\">“Umbrella charts”</a></strong></p>\n<h2>Include subchart</h2>\n<p>According to <strong><a href=\"https://helm.sh/docs/topics/charts/#chart-dependencies\">Helm documentation</a></strong>, subcharts can be refereed from web server or local file system. Well direct reference to the file system does not work with <code class=\"language-text\">file://</code> and returns <code class=\"language-text\">Error: INSTALLATION FAILED: found in Chart.yaml, but missing in charts/ directory: &lt;dependent-chart-name></code></p>\n<p>Create two charts <code class=\"language-text\">chartOne</code> and <code class=\"language-text\">chartTwo</code>, and consider <code class=\"language-text\">chartTwo</code> depends on multiple instances on <code class=\"language-text\">chartOne</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">helm create -n chartOne chartOne\nhelm create -n chartTwo chartTwo</code></pre></div>\n<p>When referring subcharts from external webserver (registry), <code class=\"language-text\">charts</code> folder is created by <code class=\"language-text\">helm create</code> and followed by <code class=\"language-text\">helm dependency update</code> all dependent sub charts of the parent chart are downloaded in <code class=\"language-text\">tgz</code>. Since Helm version 3, <code class=\"language-text\">helm serve</code> is deprecated, therefore that is not an option. </p>\n<p>To get this running, manually copy contents of <code class=\"language-text\">chartOne</code> into <code class=\"language-text\">chartTwo\\charts\\</code>. </p>\n<p>In <code class=\"language-text\">chartTwo\\Chart.yaml</code>, include dependencies tag with chartOne. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies:\n  - name: chartOne ## should match `name` in charts/subfolder `Chart.yaml`\n    charts: chartOne ## should match name of the subfolder in `charts`\n    # repository: \"file://../chartOne\" ## does not work!\n    version: \"0.1.0\" ## should match `version` in charts/subfolder `Chart.yaml`</code></pre></div>\n<p>Consider another case when multiple instances of the same building block are required by the parent chart. The challenge could be with the <code class=\"language-text\">Release.Name</code> overlap, which causes chart installation failure. </p>\n<p>To handle this, common practice is to update the default name of the subchart to ‘Chart.Name’ in the <code class=\"language-text\">_helpers.tpl</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{- define \"chartOne.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- end }}</code></pre></div>\n<p>In the parent chart <code class=\"language-text\">chartTwo\\Chart.yaml</code>, under the dependencies tag include <code class=\"language-text\">alias</code> for each subchart. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies:\n  - name: chartOne\n    alias: first-instance ## release-name on the dependent chart\n    charts: chartOne\n    version: \"0.1.0\"\n\n  - name: chartOne\n    alias: second-instance ## release-name on the dependent chart\n    charts: chartOne\n    version: \"0.1.0\"</code></pre></div>\n<p>Refer code <strong><a href=\"https://github.com/koushik-aravalli/development/tree/master/helm\">here</a></strong></p>\n<p>Tags: <code class=\"language-text\">Helm</code>\nCategories: <code class=\"language-text\">Kubernetes</code></p>","frontmatter":{"title":"Helm - Umbrella chart using local reference","date":"December 04, 2021","description":"","tags":["kubernetes","helm"]}}},"pageContext":{"slug":"/Helm-Umbrella-chart-local-chart/","previous":{"fields":{"slug":"/Azure-Container-Apps/"},"frontmatter":{"title":"Deploying Application in Azure Container Apps"}},"next":{"fields":{"slug":"/k8s-dashboard-token/"},"frontmatter":{"title":"Access Kubernetes Dashboard with k8s v1.24"}}}},"staticQueryHashes":["2841359383"]}